<!DOCTYPE html>
<html lang="en">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Blastoise</title>
    <style>
        html, body, #map {
            margin: 0;
            padding: 0;
            height: 100%;
            font-family: 'Roboto', sans-serif;
        }
        #map{
            width: 100%;
            height: 100%;
        }
        .notifications{
            position:fixed;
            left: 15px;
            bottom: 15px;
        }
        .notification{
            background-color: #fff;
            border: 1px solid #d6d6d6;
            height: 100px;
            width: 400px;
            margin-top: 15px;
            font-size: 18px;
            font-weight: 300;

            cursor: pointer;

            display: flex;
            /*flex-direction: column;*/
            /*justify-content: center;*/
            align-items: center;
        }
        .notification > *{
        }
        .notification > img{
            height: 60px;
            image-rendering: pixelated;
        }
        .notification > span{
            margin-left: 15px;
        }
        .spinresult {
            margin: 30px;
        }
        .spinresult > img{
            height: 30px;
            image-rendering: pixelated;
            margin-right: 10px;
        }
    </style>
    <link href='https://fonts.googleapis.com/css?family=Roboto:400,300,500' rel='stylesheet' type='text/css'>
</head>
<body>
<div id="map"></div>
<div class="notifications">
</div>
<script src="https://code.jquery.com/jquery-3.1.0.min.js"></script>
<script src="/tmpl.min.js"></script>
<script src="/socket.io/socket.io.js"></script>
<script>
    //Maps
    var map;
    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: {lat: 51.370, lng: 6.172},
            zoom: 15,
            streetViewControl: false,
        });
    }
    var playerposition;
    var pokemarkers = [];
    //Networking
    var io = io();

    io.on('disconnect', function(){
        map.clearMarkers();
        playerposition = null;
    });
    io.on('setInitialLocation', function(loc){
        if(typeof map === "undefined") return;
        console.log('setInitialLocation');
        map.setCenter(loc)
        playerposition = new google.maps.Marker({
            position: loc,
            map: map,
            title: "Player Position",
            icon: 'ash-ketchum.png'
        });
        //TODO Set view to coordinates
    })
    io.on('setLocation', function(loc){
        if(typeof map === "undefined") return;
        console.log('setLocation');
        playerposition.setPosition(loc);
    });
    io.on('showCatch', function(data){
        console.log(data);
        var o = {
            type: "catch",
            image: "/pixel_icons/"+data.id+".png",
            message: "Caught " + data.cp +"CP " + data.name
        }
        new Notification(o);
    });
    io.on('showSpin', function(data){
        console.log(data);
        var o = {
            type: "spin",
            items: data
        }
        new Notification(o);
    });
    io.on('displayPokemon', function(data){
        console.log('displayPokemon');
        for(p in pokemarkers){
            pokemarkers[p].setMap(null);
        }
        pokemarkers = [];
        for(p in data){
            let marker = new google.maps.Marker({
                position: data[p].loc,
                map: map,
                title: data[p].name,
                icon: "/pixel_icons/"+data[p].id+".png"
            });
            pokemarkers.push(marker);
        }
    });
    function Notification(o){
        var self = this;
        this.element = tmpl('notification', o);
        console.log(o);
        this.element = $(this.element);
        this.parent = $('.notifications');
        this.parent.append(this.element);

        this.element.click(function(){
            self.delete();
        });

        setTimeout(function(){
            self.delete();
        }, 4000);
    }
    Notification.prototype.delete = function(){
        this.element.fadeOut(300, function(){
            $(this).remove();
        });
    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBl93Ny6Ge50xrXKHCMjucK8fQZ5MPh2H0&callback=initMap"></script>

<script type="x-tmpl" id="notification">
    <div class="notification">
        {% if(o.type == "catch"){ %}
            <img src="{%=o.image%}">
            <span>{%=o.message%}</span>
        {% } %}

        {% if(o.type == "spin"){ %}
            <div class="spinresult">
                {% for (var i=0; i<o.items.length; i++) { %}
                    <img src="/pixel_icons/{%=o.items[i]%}.png">
                {% } %}
            </div>
        {% } %}
    </div>
</script>
</body>
</html>